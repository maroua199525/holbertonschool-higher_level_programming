>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# define matrix
>>> matrix = [[1, 2, 3], [4, 5, 6]]

# divide by 3
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# divid by 1.5
>>> print(matrix_divided(matrix, 1.5))
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

# not list of ints, divide by int
>>> print(matrix_divided([[4, 'j', 8], ['holberton', 'school', 'h']], 1))
Traceback (most recent call last):
		  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# missing 1 arg
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
		  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# missing both args
>>> print(matrix_divided())
Traceback (most recent call last):
		  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# divide by "holberton"
>>> print(matrix_divided(matrix, "holberton"))
Traceback (most recent call last):
		  ...
TypeError: div must be a number

# divide by 0
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
		  ...
ZeroDivisionError: division by zero

size of matrix different
>>> matrix = [[1, 2, 3], [4, 6]]

 length of the matrix have different size
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
		  ...
TypeError: Each row of the matrix must have the same size
